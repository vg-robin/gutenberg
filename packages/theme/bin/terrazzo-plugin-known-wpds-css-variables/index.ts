/**
 * External dependencies
 */
import { FORMAT_ID } from '@terrazzo/plugin-css';
import type { Plugin } from '@terrazzo/parser';

function isPrivateToken( token: string ) {
	return /-private-/i.test( token );
}

export default function pluginKnownWpdsCssVariables( {
	exports = [ { filename: 'design-tokens.js', modes: false } ],
} = {} ): Plugin {
	return {
		name: '@terrazzo/plugin-known-wpds-css-variables',
		async build( { getTransforms, outputFile } ) {
			// Either a string (modes=false) or an object (modes=true)
			const tokensToExport: Record<
				string,
				Record< string, string | Record< string, string > >
			> = {};

			for ( const token of getTransforms( {
				format: FORMAT_ID,
				id: '*',
			} ) ) {
				if ( ! token.localID ) {
					console.warn(
						'Unexpected â€” Missing local ID when building token list for eslint plugin'
					);
					continue;
				}

				if ( ! isPrivateToken( token.localID ) ) {
					tokensToExport[ token.localID ] ??= {};

					tokensToExport[ token.localID ][ token.mode ] = token.value;
				}
			}

			const exportsAsArray = ! Array.isArray( exports )
				? [ exports ]
				: exports;
			for ( const { filename, modes } of exportsAsArray ) {
				outputFile(
					filename,
					[
						'/**',
						' * This file is generated by the @terrazzo/plugin-known-wpds-css-variables plugin.',
						' * Do not edit this file directly.',
						' */',
						'',
						`export default ${ JSON.stringify(
							modes === false
								? Array.from(
										new Set( Object.keys( tokensToExport ) )
								  )
								: tokensToExport,
							null,
							2
						) }${
							filename.endsWith( '.ts' ) && modes
								? ' as Record< string, Record< string, string > >'
								: ''
						}`,
						'', // final empty line
					].join( '\n' )
				);
			}
		},
	};
}
